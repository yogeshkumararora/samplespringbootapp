name: Release build
on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2release-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2release

      - name: Build and Test
        uses: qcastel/github-actions-maven-cmd@master
        with:
          maven-args: "clean test -Ddockerfile.skip -DdockerCompose.skip -Djib.skip"

      - name: Release
        uses: qcastel/github-actions-maven-release@v1.12.25
        env:
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk/
        with:
          release-branch-name: "main"
          maven-args: "jib:build -DskipTests -DskipITs -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} -Dgpg.keyname=${{ secrets.GPG_KEY_ID }}"
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
          git-release-bot-name: "release-bot"
          git-release-bot-email: "bot@github.local"

          gpg-enabled: true
          gpg-key-id: ${{ secrets.GPG_KEY_ID }}
          gpg-key: ${{ secrets.GPG_KEY }}
          gpg-passphrase: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          
          docker-registry-id: ${{ env.REGISTRY }}
          docker-registry-username: ${{ github.actor }}
          docker-registry-password: ${{ secrets.GITHUB_TOKEN }}

          maven-repo-server-id: ossrh
          maven-repo-server-username: ${{ secrets.OSSRH_USERNAME }}
          maven-repo-server-password: ${{ secrets.OSSRH_TOKEN }}
